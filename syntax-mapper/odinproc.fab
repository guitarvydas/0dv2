OdinProcSignature {
  Program [item+] = ‛«item»’
  Item [i] = ‛«i»’


  Proc [ProcSignature ProcDefinitionBody] = ‛«ProcSignature»«ProcDefinitionBody»’

  ProcDefinitionBody [lb BodyStuff rb] = ‛«lb»«BodyStuff»«rb»’

  ProcSignature_nonvoid [ID kcc Pragma? kproc OdinParameterList OdinReturnTypeList] = ‛«ID»«kcc»«Pragma»«kproc»«OdinParameterList»’
  ProcSignature_void [ID kcc Pragma? kproc OdinParameterList lookahead] = ‛«ID»«kcc»«Pragma»«kproc»«OdinParameterList»’

  OdinParameterList_empty [lp rp] = ‛()’
  OdinParameterList_single [lp LastParameter rp] = ‛(«LastParameter»)’
  OdinParameterList_multiple [lp NotLastParameter+ LastParameter rp] = ‛(«NotLastParameter» «LastParameter»)’

  OdinReturnType_void [lookahead] = ‛’
  OdinReturnType_typed [karrow OdinReturnTypeList] = ‛->«OdinReturnTypeList»’
  OdinReturnTypeList_empty [lp rp] = ‛()’
  OdinReturnTypeList_singlebracketed [lp LastParameter rp] = ‛(«LastParameter»)’
  OdinReturnTypeList_multiple [lp NotLastParameter+ LastParameter rp] = ‛(«NotLastParameter» «LastParameter»)’
  OdinReturnTypeList_single [SingleReturnParameter] = ‛«SingleReturnParameter»’

  NotLastParameter [AllocatorOrParameterName AnythingButComma kcomma] = ‛«AllocatorOrParameterName»’
  LastParameter [AllocatorOrParameterName AnythingButRPar] = ‛«AllocatorOrParameterName»’

  NotLastReturnParameter [ParameterName? AnythingButComma kcomma] = ‛«ParameterName» «AnythingButComma»,’
  LastReturnParameter [ParameterName? AnythingButRPar] = ‛«ParameterName» «AnythingButRPar»’
  SingleReturnParameter [AnythingButProcDefinitionBody] = ‛«AnythingButProcDefinitionBody»’

  Pragma [kocto fi] = ‛«kocto»«fi» ’

  ParameterName_sharedtype [ID lookahead] = ‛«ID» ’
  ParameterName_named [ID kcolon] = ‛«ID» ’
  Allocator [kallocator kassign] = ‛’
  AllocatorOrParameterName [x] = ‛«x»’

  BodyStuff [stuff] = ‛«stuff»’
  AnythingButComma [stuff] = ‛«stuff»’
  AnythingButRPar [stuff] = ‛«stuff»’
  AnythingButProcDefinitionBody [stuff] = ‛«stuff»’
  
  
  string [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  charconst [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  id [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  integer [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  symbol [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  keyword [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  multi_char_operator [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  verbatim [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  comment [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  anyToken [anyToken1 ws] = ‛«anyToken1»«ws»’
  
  ws [wsc*] = ‛«wsc»’
    skipTo_done [lookahead] = ‛’
  skipTo_continue [i x] = ‛«i» «x»’
  inner_nestedparens [l ws1 Inner* r ws2] = ‛«l»«ws1»«Inner»«r»«ws2»’
  inner_nestedbraces [l ws1 Inner* r ws2] = ‛«l»«ws1»«Inner»«r»«ws2»’
  inner_bottom [AnyToken] = ‛«AnyToken»’


}

