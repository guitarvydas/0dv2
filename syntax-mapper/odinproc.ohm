Odin0D {
  program = item+
  item =
    | procDef -- procdef
    | any -- other

  procDef = id spaces "::" spaces "#force_inline"? spaces "proc" spaces formalsList spaces ("->" spaces retList)? whereclause? procbody
  whereclause = "where" spaces wherebody
  formalsList = "(" formal* ")"
  formal =
    | "allocator" spaces ":=" spaces "context." id spaces -- allocator
    | spaces id comma -- shorthand
    | spaces id spaces ":" spaces type -- other
  type = spaces typechar+ spaces
  typechar =
    | "(" typecharinner+ ")" -- parenthesized
    | ~space ~"(" ~")" any -- bottom

  typecharinner =
    | "(" typecharinner+ ")" -- parenthesized
    | ~"(" ~")" any  -- bottom

  retList =
    | "(" type* ")" -- multiple
    | type -- single

  procbody = spaces "{" bodychar+ "}"
  bodychar =
    | string -- string
    | "{" bodychar+ "}" -- recursive
    | comment -- comment
    | ~"{" ~"}" any -- bottom
  wherebody = wbodychar+
  wbodychar =
    | string -- string
    | comment -- comment
    | ~"{" ~"}" any -- bottom

  id = idfirst idrest*
  idfirst = letter | "_"
  idrest = alnum | "_"
  comma = ","
  string = dq (~dq any)* dq
  dq = "\""
  uspc = "・"
  unl = "⦚"
  comment = "//" (~unl any)*
  space := uspc | unl | comment
}

