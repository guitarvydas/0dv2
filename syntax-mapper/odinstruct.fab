Odin0Dstruct {
  program [item+] = ‛«item»’
  item [i] = ‛«i»’

  struct [ID kcc ws1 kstruct ws2 structype? lb ws3 NotLastField* LastField rb ws4] = ‛\n«ID» :: struct {⇢\n«NotLastField»«LastField»\n}\n’

  structtype [lp ws1 anythingButRPar rp ws2] = ‛’

  notLastField [ID kcolon ws1 AnythingButComma kcomma ws2] = ‛A«ID»\n’
  lastField_done [lookahead] = ‛’
  lastField_fieldwithcomma [ID kcolon ws1 AnythingButComma kcomma ws2 lookahead] = ‛B⇠«ID»’
  lastField_fieldnocomma [ID kcolon ws1 AnythingButRBrace lookahead] = ‛C⇠«ID»’

  anythingButComma [skip ws] = ‛«skip»’
  anythingButRBrace [skip ws] = ‛«skip»’
  anythingButRPar [skip ws] = ‛«skip»’

  
  string [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  charconst [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  id [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  integer [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  symbol [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  keyword [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  multi_char_operator [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  verbatim [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  comment [kb cs* ke ws] = ‛«kb»«cs»«ke»«ws»’
  anyToken [anyToken1 ws] = ‛«anyToken1»«ws»’
  
  ws [wsc*] = ‛«wsc»’

  sym [kbegin text kend ws] = ‛«kbegin»«text»«kend»«ws»’

  indentc [k ws] = ‛«k»«ws»’
  dedentc [k ws] = ‛«k»«ws»’
  
    skipTo_done [lookahead] = ‛’
  skipTo_continue [i x] = ‛«i»«x»’
  inner_nestedparens [l ws1 Inner* r ws2] = ‛«l»«ws1»«Inner»«r»«ws2»’
  inner_nestedbraces [l ws1 Inner* r ws2] = ‛«l»«ws1»«Inner»«r»«ws2»’
  inner_bottom [AnyToken] = ‛«AnyToken»’


}
