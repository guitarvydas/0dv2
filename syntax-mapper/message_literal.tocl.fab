Message_Literal_Rewrite {
  program [items+] = ‛«items»’
  item [x] = ‛«x»’
  message_Literal [kmessage lp ws1 id ws2 rp ws3 lb ws4 Operand1 kcomma ws5 Operand2 rb] = ‛❲Message_Literal❳«ws1»«ws2»«ws3»❪«ws4»«Operand1»,«ws5»«Operand2»❫’
  operand_recursive [Operand kdot id ws] = ‛«Operand»«kdot»«id»«ws»’
  operand_bottom [id ws] = ‛«id»«ws»’

  
  string [kb1 cs* ke] = ‛«kb1»«cs»«ke»’
  charconst [kb2 cs* ke] = ‛«kb2»«cs»«ke»’
  id [kb3 cs* ke] = ‛«kb3»«cs»«ke»’
  integer [kb4 cs* ke] = ‛«kb4»«cs»«ke»’
  symbol [kb5 cs* ke] = ‛«kb5»«cs»«ke»’
  keyword [kb6 cs* ke] = ‛«kb6»«cs»«ke»’
  multi_char_operator [kb7 cs* ke] = ‛«kb7»«cs»«ke»’
  verbatim [kb8 cs* ke] = ‛«kb8»«cs»«ke»’
  comment [kb9 cs* ke] = ‛«kb9»«cs»«ke»’
  anyToken [anyToken1] = ‛«anyToken1»’
  annotation [ab cs* ae] = ‛«ab»«cs»«ae»’
  
  ws [wsc*] = ‛«wsc»’

  sym [kbegin text kend] = ‛«kbegin»«text»«kend»’

  indentc [k] = ‛«k»’
  dedentc [k] = ‛«k»’


}
